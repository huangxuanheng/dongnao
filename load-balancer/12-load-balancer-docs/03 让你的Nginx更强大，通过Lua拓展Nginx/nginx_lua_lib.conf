worker_processes  1;
events {
    worker_connections 1024;
}

http {
    default_type text/html;
    charset utf-8;

    lua_code_cache on;

    # 设置由set_by_lua， content_by_lua等指定的脚本使用的Lua模块搜索路径。类似java的classPath
    # 路径字符串采用标准的Lua路径形式，;; 可用于代表原始搜索路径。
	lua_package_path "/usr/local/openresty/lua_scripts/?.lua;;";

    # 申请一个名为dogs的10m字典内存，共享在所有工作进程中
    lua_shared_dict dogs 10m;

    resolver 114.114.114.114 8.8.8.8;

    server {
        listen 8080;

        location /redis {
            # mysql只需要替换成mysql_demo.lua脚本即可
            content_by_lua_file /usr/local/openresty/lua_scripts/redis_demo.lua;
        }

        location /mysql {
            content_by_lua_file /usr/local/openresty/lua_scripts/mysql_demo.lua;
        }

        location = /dns {
            content_by_lua_block {
                local resolver = require "resty.dns.resolver"
                local r, err = resolver:new{
                    nameservers = {"8.8.8.8", {"8.8.4.4", 53} },
                    retrans = 5,  -- 5次重试
                    timeout = 2000,  -- 2秒
                }

                if not r then
                    ngx.say("实例化解析器失败：", err)
                    return
                end

                local answers, err, tries = r:query("www.google.com", nil, {})
                if not answers then
                    ngx.say("查询DNS服务失败：", err)
                    ngx.say("返回历史记录\n  ", table.concat(tries, "\n  "))
                    return
                end

                if answers.errcode then
                    ngx.say("服务端返回错误代码: ", answers.errcode,
                            ": ", answers.errstr)
                end

                for i, ans in ipairs(answers) do
                    ngx.say(ans.name, " ", ans.address or ans.cname,
                            " type:", ans.type, " class:", ans.class,
                            " ttl:", ans.ttl)
                end
            }
        }

        location /http {
            content_by_lua_file /usr/local/openresty/lua_scripts/http_demo.lua;
        }

        set $template_location "/templates";
        set $template_root "/usr/local/openresty/lua_scripts";
        location /template {
            content_by_lua_file /usr/local/openresty/lua_scripts/html_template.lua;
        }
    }
}