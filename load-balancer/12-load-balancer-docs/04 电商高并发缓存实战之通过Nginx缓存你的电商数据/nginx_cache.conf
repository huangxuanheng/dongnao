events {
	# 并发连接数
    worker_connections  1024;
}
http {
    # JAVA服务器集群
	upstream app_servers {
		server 127.0.0.1:8080;	
#		server 127.0.0.1:8081;
	}
	# 代理缓存配置 - 定义配置
	proxy_cache_path "./cache_data/" levels=2:1:2 keys_zone=hot_information_cache:256m inactive=1d max_size=1000g;  
	proxy_cache_path "./cache_data/" levels=2:1:2 keys_zone=cache2:256m inactive=30s max_size=30g;  
	server {
		# 监听80端口
		listen	80;
		location / {
            # 开启缓存
            proxy_cache hot_information_cache;
            # 缓存JAVA应用返回的指定状态的数据，缓存时间时1天       
            proxy_cache_valid 200 206 304 301 302 1d;
            # 请求的url就是缓存的key（根据实际业务场景匹配）       
            proxy_cache_key $uri$is_args$args;      
            
            # 设置传递给上游服务的请求头，Host为客户端host，默认为$proxy_host
            proxy_set_header Host $http_host;
            # 如果缓存中没找到，再去请求后端服务器
            proxy_pass http://app_servers;
		}
		
		# 该指令在商业版本Nginx Plus支持，可以通过第三方模块ngx_cache_purge来替代
		# 资源有变化的时候清除缓存
		location ~ /purge(/.*) {
			#设置只允许指定的IP来清除缓存
			allow all;
			# allow 127.0.0.1;
			# deny all ;
			proxy_cache_purge hot_information_cache $1;
		}
	}
}
