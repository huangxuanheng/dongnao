# 简单指令以;结尾
worker_processes  4;

# 大括号属于块指令
events {
    worker_connections  1024;
}

# http属于主上下文
http {
    include       mime.types;
    default_type  text/html;

    sendfile        on;
    server_tokens  off; # 隐藏nginx版本号信息

    keepalive_timeout 65;
    log_format access '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # 在http指令块中，定义限流控制的使用空间名及限制信息
    limit_req_zone $binary_remote_addr zone=peraddr_req:300m rate=10r/s;
    limit_req_zone $server_name zone=perserver_req:300m rate=1000r/s;
    limit_conn_zone $binary_remote_addr zone=peraddr_conn:300m;
    limit_conn_zone $server_name zone=perserver_conn:300m;

    # 限制给客户端的响应速率，初始50k，后续500k
    limit_rate 500k;
    limit_rate_after 1000k;

    # 设置与后端服务器建立连接的超时时间，一般不可能大于75秒
    proxy_connect_timeout 60s;
    proxy_read_timeout 5s;
    proxy_send_timeout 5s;

    # 故障转移，限制只进行一次尝试
    proxy_next_upstream error timeout;
    proxy_next_upstream_timeout 3s;
    proxy_next_upstream_tries 1;

    upstream backend {
        server 192.168.100.120:8088;
        server 192.168.100.121:8088;
    }

    # server在http的上下文中 
    server {
        # location在server上下文中
        location / {
            # 限制单个IP平均每秒允许不超过10个请求，突发不超过50个请求
            limit_req zone=peraddr_req burst=50;
            # 整个虚拟服务，平均每秒不允许超过1000个，突发不超过100个请求
            limit_req zone=perserver_req burst=100;

            # 限制单个IP建立不超过10个连接
            # 整个虚拟服务，不允许超过10000个连接
            limit_conn peraddr_conn 10;
            limit_conn perserver_conn 10000;
            proxy_pass http://backend;
            # 后端服务器获取用户的主机名或真实IP地址
            proxy_set_header   Host            $host;
            proxy_set_header   X-Real-IP       $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

}